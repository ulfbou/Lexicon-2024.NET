@using MachineryFleet.Core.Entities

<button class="btn btn-primary" @onclick="Show">Add Machine</button>

@if (showModal)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Machine</h5>
                    <button type="button" class="btn-close" @onclick="Hide"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="machineName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="machineName" @bind="newMachine.Name">
                    </div>
@*                     <div class="mb-3">
                        <label for="machineId" class="form-label">ID</label>
                        <input type="text" class="form-control" id="machineId" @bind="newMachine.Id">
                    </div>
 *@                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="Hide">Close</button>
                    <button type="button" class="btn btn-primary" @onclick="AddMachine">Save changes</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public EventCallback<Machine> OnMachineAdded { get; set; }

    private Machine newMachine = new Machine();
    private bool showModal = false;

    private void Show() => showModal = true;
    private void Hide() => showModal = false;

    private async Task AddMachine()
    {
        await OnMachineAdded.InvokeAsync(newMachine);
        newMachine = new Machine();
        Hide();
    }
}
