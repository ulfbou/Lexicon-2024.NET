@page "/module/{ModuleId:int}/activities"
@attribute [Authorize(Policy = ApplicationPolicy.RequireAnyRole)]
@using Microsoft.AspNetCore.Authorization
@using RoboUnicornsLMS.Services
@inject IActivityRequestService ActivityRequestService
@rendermode InteractiveServer

<h3>ListActivities</h3>

<table class="table table-striped table-dark">

    <tr>
        <th>@nameof(Activity.Title)</th>
        <th>@nameof(Activity.Description)</th>
        <th>@nameof(Activity.Start)</th>
        <th>@nameof(Activity.End)</th>
    </tr>
    <tbody>
        @foreach (Activity activity in Activities)
        {
            <tr>
                <td>
                    <p style="min-width:250px">@activity.Title</p>
                </td>
                <td>
                    <p>@activity.Description</p>
                </td>
                <td style="width:100px">
                    <p>@activity.Start.ToShortDateString()</p>
                </td>
                <td style="width:100px">
                    <p>@activity.End.ToShortDateString()</p>
                </td>
                <td>
                    <a href="@($"activityedit/{activity.Id}")" class="btn btn-primary">Edit</a>
                    @* <button type="button" class="btn btn-danger" @onclick="() => OpenDeleteDialog(activity.Id)">Delete</button> *@
                </td>
            </tr>
        }
    </tbody>
</table>
<a href=@($"/module/{ModuleId}/activityadd") class="btn btn-primary">Add New Activity</a>

@code {
    [Parameter]
    public int ModuleId { get; set; }

    public IEnumerable<Activity> Activities = new List<Activity>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Activities = await ActivityRequestService.GetActivitiesByModuleIdAsync(ModuleId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading modules: {ex.Message}");
        }
    }
}
